@model deneme.Models.Kullanici

@{
    ViewBag.Title = "Kayit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container-fluid" style="text-align: center;">
    <h1 class="navbar-brand" style="text-align: center;">Kullanıcı Kayıt Formu</h1>
</div>



@using (Html.BeginForm("Kayit", "User", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken() 

    <div class="row">

            <div class="col-md-3">
                @(Html.Kendo().Calendar().Name("Tarih"))
            </div>

            <div class="col-md-5">

                <div class="form-horizontal">

                    @if ((string)TempData["Referrer"] == "ErrorMessage" )
                    {
                        <div class="alert alert-danger">
                            <strong>Hatalı işlem. Lütfen tekrar alanları gösterildiği gibi uygun formatta doldurunuz.</strong>
                        </div>
                        <script>
                            $(".alert").delay(2000).fadeOut("fast", function () { $(this).remove(); });
                        </script>
                    }

                    @if ((string)TempData["kayit"] !=null)
                    {
                        <div class="alert alert-danger">
                            <strong>@TempData["kayit"].ToString()</strong>
                        </div>
                        <script>
                            $(".alert").delay(2000).fadeOut("fast", function () { $(this).remove(); });
                        </script>
                    }

                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div class="form-group">
                        @Html.LabelFor(model => model.resimler.resim, htmlAttributes: new { @class = "control-label col-md-10" })
                        <div class="col-md-10">
                            <input id="ImagePath" title="Resiminizi yükleyiniz."
                                   type="file" name="file" />
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.kullanici_adi, htmlAttributes: new { @class = "control-label col-md-10" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.kullanici_adi, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.kullanici_adi, "(*) nickname123", new { @class = "badge badge-secondary text-wrap" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.sifre, htmlAttributes: new { @class = "control-label col-md-10" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.sifre, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.sifre, "(*)", new { @class = "badge badge-secondary text-wrap" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.sifredogrula, htmlAttributes: new { @class = "control-label col-md-10" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.sifredogrula, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.sifredogrula, "(*)", new { @class = "badge badge-secondary text-wrap" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ad, htmlAttributes: new { @class = "control-label col-md-10" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.ad, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ad, "(*) Ali", new { @class = "badge badge-secondary text-wrap" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.soyad, htmlAttributes: new { @class = "control-label col-md-10" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.soyad, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.soyad, "(*) Kılınç", new { @class = "badge badge-secondary text-wrap" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.tel, htmlAttributes: new { @class = "control-label col-md-10" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.tel, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.tel, "5xxxxxxxxx", new { @class = "badge badge-secondary text-wrap" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label col-md-10" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control"}
                            })
                            @Html.ValidationMessageFor(model => model.email, "name@example.com", new { @class = "badge badge-secondary text-wrap" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.agree, "", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.agree, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.agree, "", new { @class = "badge badge-secondary text-wrap" })
                        </div>
                    </div>

                    <div class="form-group centerlook alert-danger">

                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Gönder" id="btn_gonder" class="btn btn-outline-success my-2 my-sm-0">
                        </div>
                    </div>

                </div>

            </div>

            <div class="col-md-3">
                <h1>Baslık</h1>
            </div>
        </div>
}